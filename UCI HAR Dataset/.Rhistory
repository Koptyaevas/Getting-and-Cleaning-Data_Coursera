setwd("~/UCINET Data")
setwd("~/")
install.packages("swirl")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, desc(r_arch:country))
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(-(x:size))
select(cran,-(x:size))
select(cran,x:size)
select(cran,-x:size)
select(cran,(x:size))
cran
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
source('~/.active-rstudio-document')
summarize(by_package, mean(size))
submit()
?n
submit()
print(tbl, pack_sum)
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into=c("sex", "class"))
submit()
submit()
students3
submit()
submit()
?spread
?spread
submit()
submit()
submit()
extract_numeric("class5")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
student4
students4
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
passed
failed
mutate(passed,status, value="passed")
mutate(passed,value="passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
submit()
submit()
swirl()
setwd("~/")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file (fileUrl, destfile="~/Quiz1.csv", method="curl")
download.file (fileUrl, destfile="~/Quiz1.csv")
Quiz1 <- read.table("~/Quiz1.csv", sep=",", header=TRUE)
str("Quiz")
str(Quiz1)
agricultureLogical <- Quiz1$ACR == 3 & Quiz1$AGS == 6
which(agricultureLogical)[1:3]
install.packages("jpeg")
library(jpeg)
?readJPEG
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file (fileUrl, destfile="~/Q2.jpg")
Q2 <- readJPEG("~/Q2.jpg", native=TRUE)
quantile(Q2, probs=c(30,80))
quantile(Q2, probs=c(0.3,0.8))
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv "
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file (fileUrl, destfile="~/Q3.csv")
download.file (url, destfile="~/Q03.csv")
Q3 <- read.table("~/Q3.csv", sep=",", header=TRUE)
Q03 <- read.table("~/Q03.csv", sep=",", header=TRUE)
Q03 <- read.table("~/Q03.csv", sep=";", header=TRUE)
setwd("~/UCI HAR Dataset")
new <- merge(test,train)
train1 <- read.table("train/X_train.txt")
train2 <- read.table("test/X_test.txt")
head(train1)
str(train2)
new <- rbind(train1, train2)
train1 <- read.table("train/subject_train.txt")
train2 <- read.table("test/subject_test.txt")
new2 <- rbind(train1, train2)
head(new2)
head(train1)
train1 <- read.table("train/y_train.txt")
train2 <- read.table("test/y_test.txt")
new3 <- rbind(train1, train2)
feat <- read.table("features.txt")
ok_feat <- grep("-mean\\(\\)|-std\\(\\)", feat[, 2])
X <- X[, ok_feat]
X <- new[, ok_feat]
names(X) <- feat[ok_feat, 2]
names(X) <- gsub("\\(|\\)", "", names(X))
names(X) <- tolower(names(X))
View(X)
activ <- read.table("activity_labels.txt")
activ[, 2] = gsub("_", "", tolower(as.character(activ[, 2])))
Z[,1] = activ[Z[,1], 2]
new3[,1] = activ[new3[,1], 2]
names(new3) <- "activity"
names(new2) <- "subject"
clean <- cbind(new2, new3, new)
write.table(clean, "merge_clean_data.txt")
uniqueSubjects = unique(new2)[,1]
numSubjects = length(unique(new2)[,1])
numActivities = length(activ[,1])
numCols = dim(clean)[2]
result = clean[1:(numSubjects*numActivities), ]
row = 1
for (s in 1:numSubjects) {
for (a in 1:numActivities) {
result[row, 1] = uniqueSubjects[new2]
result[row, 2] = activ[a, 2]
tmp <- clean[clean$subject==new2 & clean$activ==activ[a, 2], ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
row = 1
for (new2 in 1:numSubjects) {
for (a in 1:numActivities) {
result[row, 1] = uniqueSubjects[new2]
result[row, 2] = activ[a, 2]
tmp <- clean[clean$subject==new2 & clean$activ==activ[a, 2], ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
write.table(result, "data_with_the_averages.txt")
